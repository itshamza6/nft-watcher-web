import * as React from "react";
import { useTheme } from "@mui/material/styles";
import {
  Toolbar,
  Box,
  AppBar,
  Button,
  Drawer,
  List,
  Divider,
  ListItem,
  ListItemIcon,
  ListItemText,
} from "@mui/material";
import MenuIcon from "@mui/icons-material/Menu";
import IconButton from "@mui/material/IconButton";
import { useNavigate, Link, useLocation } from "react-router-dom";
import MoreRecentImg from "../images/moreRecent.png";
import { useSelector, useDispatch } from "react-redux";
import axios from "../api/axios.js";

export default function MenuAppBar(props) {
  const collections = useSelector((state) => state.collections);
  const dispatch = useDispatch();

  const [anchorEl, setAnchorEl] = React.useState(null);
  const [search, setSearch] = React.useState("");
  const [dimensions, setDimensions] = React.useState({
    height: window.innerHeight,
    width: window.innerWidth,
  });
  const theme = useTheme();
  const navigate = useNavigate();
  const [drawer, setDrawer] = React.useState(false);
  const [collectionLoading, setCollectionLoading] = React.useState(false);
  const [filteredCollections, setFilteredCollections] = React.useState([]);
  const location = useLocation();

  React.useEffect(() => {
    setSearch("");
    setDrawer(false);
  }, [location]);

  React.useEffect(() => {
    setDimensions({
      height: window.innerHeight,
      width: window.innerWidth,
    });
    window.addEventListener("resize", handleResize);

    getCollections();
    return () => {
      window.removeEventListener("resize", handleResize);
    };
  }, []);

  function handleResize() {
    setDimensions({
      height: window.innerHeight,
      width: window.innerWidth,
    });
  }

  const toogleTheme = () => {
    if (props.theme == "dark") {
      localStorage.setItem("theme", "light");
      props.setTheme("light");
    } else {
      localStorage.setItem("theme", "dark");
      props.setTheme("dark");
    }
  };

  const onSearchNFT = (e) => {
    setSearch(e.target.value);
    if (e.target.value.length != 0) {
      // search collections
      const Fcollections = collections.collection_names.filter((item) =>
        item.name.toLowerCase().includes(e.target.value.toLowerCase())
      );
      setFilteredCollections(Fcollections);
    }
    setDrawer(true);
  };

  const setCollection = (data, key) => {
    dispatch({
      type: "collections:add",
      key: key,
      data: data.collections,
    });
  };

  const getCollections = () => {
    setCollectionLoading(true);
    axios
      .get(`/collections`)
      .then((res) => {
        if (res.data.success) {
          setCollection(res.data, "collection_names");
          setFilteredCollections(res.data.collections);
          setCollectionLoading(false);
        }
      })
      .catch(console.error);
  };

  return (
    <Box>
      {dimensions.width > 1300 ? (
        <>
          <AppBar position="fixed" style={styles(theme).appBar}>
            <Toolbar style={{ maxWidth: 1500, margin: "0 auto" }}>
              <div
                className="me-5"
                style={{ cursor: "pointer" }}
                onClick={() => navigate("/")}
              >
                <svg
                  width="132"
                  height="28"
                  viewBox="0 0 132 28"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M23.7852 13.2069V15.9573C23.7852 16.4685 23.8011 16.9796 23.7726 17.4892C23.6951 18.8942 23.2365 20.119 21.867 20.6833C20.4438 21.2732 19.1218 21.045 17.9341 19.9487C14.1499 16.4572 10.3435 13.0011 6.534 9.53218C6.30154 9.31999 6.05959 9.11584 5.66899 8.76541V20.6688C3.87254 20.6688 2.16782 20.6929 0.466256 20.6302C0.308118 20.6302 0.0329588 20.0805 0.0297961 19.7847C-0.000250086 16.0923 0.00923817 12.3983 0.00923817 8.70433C0.00923817 7.0229 -0.0176452 5.34148 0.0203078 3.66005C0.0772374 1.15078 1.67917 -0.363471 3.93263 0.075371C4.66639 0.216829 5.4128 0.689429 5.98842 1.20061C9.75684 4.57632 13.4778 8.00186 17.2162 11.4113C17.455 11.6283 17.7048 11.8341 18.0923 12.1684V0.404905H63.3355C62.6697 1.27777 62.0878 2.04936 61.4963 2.81613C60.7863 3.73239 60.2312 4.99265 59.3045 5.45882C58.3779 5.92499 57.0527 5.60189 55.903 5.60993C54.728 5.61957 53.5531 5.60993 52.2769 5.60993V20.5756H46.089V5.69512H23.7916C23.7916 6.40242 23.7378 7.09202 23.8264 7.76074C23.8517 7.95846 24.285 8.24298 24.5332 8.24298C26.8673 8.27995 29.2015 8.26388 31.534 8.26388H40.1351C39.9074 8.63199 39.773 8.87472 39.6132 9.09977C38.8225 10.225 37.9781 11.3068 37.2238 12.4546C36.83 13.0526 36.3714 13.2262 35.6867 13.2197C32.1128 13.1876 28.5373 13.2053 24.9634 13.2053L23.7852 13.2069Z"
                    fill="url(#paint0_linear_55_667)"
                  />
                  <path
                    d="M59.992 21C59.6987 21 59.4907 20.808 59.368 20.424L56.408 11.048C56.344 10.8453 56.3733 10.6427 56.496 10.44C56.624 10.2373 56.808 10.136 57.048 10.136C57.176 10.136 57.2987 10.1787 57.416 10.264C57.5333 10.344 57.6187 10.472 57.672 10.648L60.28 18.952H59.928L62.408 10.728C62.4667 10.536 62.5653 10.392 62.704 10.296C62.848 10.2 62.9947 10.152 63.144 10.152C63.304 10.152 63.4587 10.2 63.608 10.296C63.7573 10.392 63.8587 10.536 63.912 10.728L66.392 18.952H66.04L68.648 10.648C68.7067 10.472 68.7893 10.3467 68.896 10.272C69.008 10.192 69.128 10.152 69.256 10.152C69.4907 10.152 69.6773 10.2427 69.816 10.424C69.9547 10.6053 69.9867 10.8133 69.912 11.048L66.952 20.424C66.824 20.808 66.5893 21 66.248 21H66.216C65.8587 21 65.624 20.808 65.512 20.424L62.936 12.088H63.288L60.696 20.424C60.6427 20.616 60.5627 20.76 60.456 20.856C60.3547 20.952 60.2 21 59.992 21ZM70.9958 20.936C70.5691 20.7707 70.4411 20.4773 70.6118 20.056L74.4198 10.68C74.5798 10.328 74.8304 10.152 75.1718 10.152H75.2038C75.5504 10.168 75.7851 10.344 75.9078 10.68L79.7798 20.056C79.9504 20.4773 79.8278 20.7707 79.4118 20.936C78.9904 21.1013 78.6971 20.9787 78.5318 20.568L77.6678 18.472H72.6838L71.8598 20.568C71.6944 20.984 71.4064 21.1067 70.9958 20.936ZM73.2118 17.128H77.1158L75.1238 12.28L73.2118 17.128ZM84.1308 21C83.9068 21 83.7388 20.944 83.6267 20.832C83.5148 20.72 83.4588 20.552 83.4588 20.328V11.512H80.3548C80.1308 11.512 79.9628 11.456 79.8508 11.344C79.7388 11.232 79.6828 11.064 79.6828 10.84C79.6828 10.616 79.7388 10.448 79.8508 10.336C79.9628 10.224 80.1308 10.168 80.3548 10.168H87.9068C88.1308 10.168 88.2988 10.224 88.4108 10.336C88.5228 10.448 88.5788 10.616 88.5788 10.84C88.5788 11.064 88.5228 11.232 88.4108 11.344C88.2988 11.456 88.1308 11.512 87.9068 11.512H84.8028V20.328C84.8028 20.5413 84.7441 20.7067 84.6268 20.824C84.5148 20.9413 84.3494 21 84.1308 21ZM93.2703 21C92.0489 21 91.1449 20.7093 90.5583 20.128C89.9769 19.5413 89.6863 18.6373 89.6863 17.416V13.736C89.6863 12.504 89.9769 11.5973 90.5583 11.016C91.1396 10.4293 92.0383 10.1413 93.2543 10.152H95.1903C96.1929 10.152 96.9583 10.36 97.4863 10.776C98.0143 11.1867 98.3209 11.8373 98.4062 12.728C98.4383 12.952 98.3956 13.1227 98.2783 13.24C98.1609 13.3573 97.9903 13.416 97.7663 13.416C97.3609 13.416 97.1263 13.192 97.0623 12.744C97.0089 12.2533 96.8383 11.9227 96.5503 11.752C96.2676 11.5813 95.8143 11.496 95.1903 11.496H93.2543C92.6889 11.4907 92.2436 11.5547 91.9183 11.688C91.5983 11.8213 91.3689 12.0533 91.2303 12.384C91.0969 12.7093 91.0303 13.16 91.0303 13.736V17.416C91.0303 17.9867 91.0969 18.4347 91.2303 18.76C91.3689 19.0853 91.6009 19.3173 91.9263 19.456C92.2516 19.5893 92.6996 19.656 93.2703 19.656H95.1903C95.8143 19.656 96.2676 19.5707 96.5503 19.4C96.8383 19.224 97.0089 18.8933 97.0623 18.408C97.1263 17.96 97.3609 17.736 97.7663 17.736C97.9903 17.736 98.1609 17.7947 98.2783 17.912C98.3956 18.0293 98.4383 18.2 98.4062 18.424C98.3209 19.32 98.0143 19.9733 97.4863 20.384C96.9583 20.7947 96.1929 21 95.1903 21H93.2703ZM101.883 21C101.707 21 101.55 20.9333 101.411 20.8C101.278 20.6613 101.211 20.504 101.211 20.328V10.824C101.211 10.648 101.278 10.4933 101.411 10.36C101.55 10.2213 101.707 10.152 101.883 10.152C102.059 10.152 102.214 10.2213 102.347 10.36C102.486 10.4933 102.555 10.648 102.555 10.824V14.84H109.083V10.824C109.083 10.648 109.15 10.4933 109.283 10.36C109.416 10.2213 109.574 10.152 109.755 10.152C109.931 10.152 110.086 10.2213 110.219 10.36C110.358 10.4933 110.427 10.648 110.427 10.824V20.328C110.427 20.504 110.358 20.6613 110.219 20.8C110.086 20.9333 109.931 21 109.755 21C109.574 21 109.416 20.9333 109.283 20.8C109.15 20.6613 109.083 20.504 109.083 20.328V16.184H102.555V20.328C102.555 20.504 102.486 20.6613 102.347 20.8C102.214 20.9333 102.059 21 101.883 21ZM114.43 21C113.982 21 113.758 20.776 113.758 20.328V10.824C113.758 10.376 113.982 10.152 114.43 10.152H120.174C120.622 10.152 120.846 10.376 120.846 10.824C120.846 11.272 120.622 11.496 120.174 11.496H115.102V14.856H118.286C118.734 14.856 118.958 15.08 118.958 15.528C118.958 15.976 118.734 16.2 118.286 16.2H115.102V19.656H120.174C120.622 19.656 120.846 19.88 120.846 20.328C120.846 20.776 120.622 21 120.174 21H114.43ZM130.374 21.032C130.198 21.144 130.03 21.1787 129.87 21.136C129.71 21.0933 129.574 20.984 129.462 20.808L126.982 16.68H124.742V20.328C124.742 20.776 124.518 21 124.07 21C123.622 21 123.398 20.776 123.398 20.328V10.824C123.398 10.376 123.622 10.152 124.07 10.152H127.814C128.79 10.152 129.537 10.4133 130.054 10.936C130.577 11.4533 130.838 12.2 130.838 13.176V13.656C130.838 14.504 130.641 15.1813 130.246 15.688C129.852 16.1893 129.281 16.5013 128.534 16.624L130.63 20.12C130.833 20.4933 130.748 20.7973 130.374 21.032ZM124.742 15.336H127.814C128.422 15.336 128.854 15.208 129.11 14.952C129.366 14.696 129.494 14.264 129.494 13.656V13.176C129.494 12.5733 129.366 12.144 129.11 11.888C128.854 11.6267 128.422 11.496 127.814 11.496H124.742V15.336Z"
                    fill="white"
                  />
                  <defs>
                    <linearGradient
                      id="paint0_linear_55_667"
                      x1="-0.000250087"
                      y1="10.4999"
                      x2="60.9381"
                      y2="10.4999"
                      gradientUnits="userSpaceOnUse"
                    >
                      <stop stop-color="#0673DB" />
                      <stop offset="0.9" stop-color="#8212F4" />
                    </linearGradient>
                  </defs>
                </svg>
              </div>
              <a
                className=""
                href={"https://twitter.com/nftwatcher_net"}
                target="_blank"
                style={styles(theme).appBarIcon}
              >
                <svg
                  width="28"
                  height="28"
                  viewBox="0 0 28 28"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <rect width="28" height="28" rx="4" fill="#8212F4" />
                  <path
                    d="M21 10.3022C20.4848 10.523 19.9313 10.6723 19.3503 10.7394C19.9434 10.3957 20.3988 9.85152 20.6132 9.20308C20.0494 9.52655 19.4326 9.75446 18.7893 9.87695C18.2654 9.33728 17.5189 9 16.6928 9C15.1065 9 13.8204 10.2434 13.8204 11.7769C13.8204 11.9946 13.8458 12.2065 13.8948 12.4098C11.5077 12.2939 9.39127 11.1884 7.97459 9.50832C7.7274 9.91846 7.58576 10.3955 7.58576 10.9044C7.58576 11.8678 8.09288 12.7178 8.86353 13.2158C8.40741 13.202 7.96132 13.0829 7.56252 12.8684C7.56235 12.88 7.56235 12.8917 7.56235 12.9033C7.56235 14.2488 8.55241 15.3712 9.86634 15.6263C9.44338 15.7375 8.99972 15.7538 8.56926 15.6739C8.93473 16.7771 9.99551 17.58 11.2523 17.6024C10.2693 18.3472 9.03082 18.7912 7.68518 18.7912C7.4533 18.7912 7.22471 18.778 7 18.7524C8.2711 19.5403 9.78086 20 11.4029 20C16.6861 20 19.5751 15.7685 19.5751 12.0989C19.5751 11.9785 19.5723 11.8587 19.5668 11.7397C20.1291 11.3467 20.6144 10.8599 21 10.3022Z"
                    fill="white"
                  />
                </svg>
              </a>
              <a
                className="ms-3"
                href={"https://medium.com/@NFTWatcher.net"}
                target="_blank"
                style={styles(theme).appBarIcon}
              >
                <svg
                  width="28"
                  height="28"
                  viewBox="0 0 28 28"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <rect width="28" height="28" rx="4" fill="#252836" />
                  <path
                    d="M15.025 14.5C15.025 16.985 13.005 19 10.512 19C9.92026 19.0008 9.33417 18.885 8.78717 18.6593C8.24018 18.4336 7.743 18.1023 7.32402 17.6845C6.90504 17.2666 6.57247 16.7703 6.34529 16.2239C6.11812 15.6775 6.00079 15.0917 6 14.5C6 12.014 8.02 10 10.512 10C11.1038 9.99909 11.69 10.1148 12.2371 10.3404C12.7842 10.5661 13.2815 10.8973 13.7006 11.3152C14.1197 11.7331 14.4524 12.2294 14.6796 12.7759C14.9068 13.3223 15.0242 13.9082 15.025 14.5ZM19.975 14.5C19.975 16.84 18.965 18.736 17.719 18.736C16.473 18.736 15.463 16.839 15.463 14.5C15.463 12.16 16.473 10.264 17.719 10.264C18.965 10.264 19.975 12.161 19.975 14.5ZM22 14.5C22 16.596 21.645 18.295 21.206 18.295C20.768 18.295 20.413 16.595 20.413 14.5C20.413 12.404 20.768 10.705 21.207 10.705C21.645 10.705 22 12.404 22 14.5Z"
                    fill="white"
                  />
                </svg>
              </a>
              <a
                className="ms-3"
                href={"https://www.instagram.com/nftwatcher_net"}
                target="_blank"
                style={styles(theme).appBarIcon}
              >
                <svg
                  width="28"
                  height="28"
                  viewBox="0 0 28 28"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <rect width="28" height="28" rx="4" fill="#252836" />
                  <path
                    fill-rule="evenodd"
                    clip-rule="evenodd"
                    d="M11.2 8H16.8C19.1196 8 21 9.8804 21 12.2V17.8C21 20.1196 19.1196 22 16.8 22H11.2C8.8804 22 7 20.1196 7 17.8V12.2C7 9.8804 8.8804 8 11.2 8ZM18.2 10.1C18.55 10.1 18.9 10.45 18.9 10.8C18.9 11.15 18.55 11.5 18.2 11.5C17.85 11.5 17.5 11.15 17.5 10.8C17.5 10.45 17.85 10.1 18.2 10.1ZM17.5 15C17.5 13.0697 15.9303 11.5 14 11.5C12.0697 11.5 10.5 13.0697 10.5 15C10.5 16.9303 12.0697 18.5 14 18.5C15.9303 18.5 17.5 16.9303 17.5 15ZM14 12.9C12.8402 12.9 11.9 13.8402 11.9 15C11.9 16.1598 12.8402 17.1 14 17.1C15.1598 17.1 16.1 16.1598 16.1 15C16.1 13.8402 15.1598 12.9 14 12.9Z"
                    fill="white"
                  />
                </svg>
              </a>
              <div className="ms-3" style={styles(theme).appBarIcon}>
                <svg
                  width="1"
                  height="30"
                  viewBox="0 0 1 30"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <line
                    x1="0.5"
                    y1="2.18557e-08"
                    x2="0.499999"
                    y2="30"
                    stroke="white"
                    stroke-opacity="0.5"
                  />
                </svg>
              </div>

              <div style={styles(theme).searchBox} className="mx-2">
                <div className="mx-2 mb-1">
                  <svg
                    width="15"
                    height="15"
                    viewBox="0 0 15 15"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M14 13.6667L11.0093 10.6707L14 13.6667ZM12.6667 6.66667C12.6667 8.16956 12.0697 9.6109 11.0069 10.6736C9.94424 11.7363 8.5029 12.3333 7.00001 12.3333C5.49712 12.3333 4.05578 11.7363 2.99307 10.6736C1.93037 9.6109 1.33334 8.16956 1.33334 6.66667C1.33334 5.16377 1.93037 3.72243 2.99307 2.65973C4.05578 1.59702 5.49712 1 7.00001 1C8.5029 1 9.94424 1.59702 11.0069 2.65973C12.0697 3.72243 12.6667 5.16377 12.6667 6.66667V6.66667Z"
                      stroke="white"
                      stroke-linecap="round"
                    />
                  </svg>
                </div>
                <div>
                  <input
                    className="py-1"
                    type="text"
                    autoComplete={"off"}
                    name="search"
                    value={search}
                    onChange={onSearchNFT}
                    placeholder="Search..."
                    style={styles(theme).seaarchInput}
                  />
                </div>
                <div
                  className="mx-2"
                  style={
                    search.length === 0
                      ? { visibility: "hidden" }
                      : { cursor: "pointer" }
                  }
                  onClick={() => setSearch("")}
                >
                  <svg
                    width="12"
                    height="12"
                    viewBox="0 0 12 12"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M10.2748 1.75062C7.93481 -0.583541 4.0949 -0.583541 1.75496 1.75062C-0.584986 4.08479 -0.584986 7.91521 1.75496 10.2494C4.0949 12.5835 7.87481 12.5835 10.2148 10.2494C12.5547 7.91521 12.6147 4.08479 10.2748 1.75062ZM7.69482 8.51372L6.01486 6.8379L4.3349 8.51372L3.49492 7.67581L5.17488 6L3.49492 4.32419L4.3349 3.48628L6.01486 5.16209L7.69482 3.48628L8.5348 4.32419L6.85484 6L8.5348 7.67581L7.69482 8.51372Z"
                      fill="white"
                    />
                  </svg>
                </div>
                <div
                  className="shadow"
                  style={
                    search.length === 0
                      ? {
                          visibility: "hidden",
                          ...styles(theme).NftSearchingBox,
                        }
                      : {
                          ...styles(theme).NftSearchingBox,
                        }
                  }
                >
                  {filteredCollections?.map((item, i) => {
                    return (
                      <Box
                        component={Link}
                        to={`/collection/${item.slug}`}
                        style={{
                          display: "flex",
                          alignItems: "center",
                          borderBottom: `1px solid ${theme.palette.primary.main}`,
                          padding: 10,
                          cursor: "pointer",
                        }}
                        className="searchingNftHover shadow"
                      >
                        <p className="m-0">#{i + 1}</p>
                        <img
                          className="mx-3"
                          src={item?.image_url}
                          style={{ width: 35, height: 35, borderRadius: 9999 }}
                        />
                        <div
                          className="d-flex"
                          style={{ flexDirection: "column" }}
                        >
                          <h6 className="m-0">
                            {item?.name?.substring(0, 18)}{" "}
                            {item?.name?.length > 18 ? "..." : null}
                          </h6>
                          {/* <small>Huxley Robots</small> */}
                        </div>
                      </Box>
                    );
                  })}
                </div>
              </div>

              <Button
                component={Link}
                style={{
                  ...styles(theme).headerButton,
                  fontSize: 13,
                }}
                to="/events"
                className={`ms-3 primaryColor`}
              >
                Upcoming Drops
              </Button>
              <Button
                component={Link}
                to="/events/submit"
                style={{...styles(theme).headerButton, fontSize: 13,}}
                className="ms-3"
                variant="contained"
              >
                List Your Upcoming Drops
              </Button>

              <Button
                style={{...styles(theme).headerButton, fontSize: 12}}
                href="https://news.nftwatcher.net"
                target="_blank"
                className="ms-3 text-white"
              >
                News
              </Button>
              <Button
                style={{...styles(theme).headerButton, fontSize: 12}}
                component={Link}
                to="/project/submit"
                className="ms-3 text-white"
              >
                List Your Project With Rarity
              </Button>
              <Button
                style={{...styles(theme).headerButton, fontSize: 12}}
                component={Link}
                to="/advertise"
                className="ms-3 text-white"
              >
                Advertise
              </Button>
              <Button
                style={{...styles(theme).headerButton, fontSize: 12}}
                component={Link}
                to="/contact-us"
                className="ms-3 text-white"
              >
                Contact Us
              </Button>

              <div
                className="ms-3 cursor-pointer"
                role="button"
                onClick={toogleTheme}
              >
                <svg
                  width="30"
                  height="30"
                  viewBox="0 0 30 30"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <circle cx="15" cy="15" r="15" fill="#8212F4" />
                  <g clip-path="url(#clip0_26_30)">
                    <path
                      d="M13 7.27805C13.0976 7.39667 13.1574 7.54183 13.1717 7.69478C13.1859 7.84773 13.154 8.00144 13.08 8.13605C12.5019 9.19753 12.1999 10.3873 12.202 11.5961C12.202 15.6171 15.48 18.8731 19.52 18.8731C20.047 18.8731 20.56 18.8181 21.053 18.7131C21.2041 18.6803 21.3615 18.6928 21.5056 18.749C21.6497 18.8052 21.774 18.9026 21.863 19.0291C21.957 19.1605 22.0049 19.3193 21.9993 19.4808C21.9937 19.6423 21.9349 19.7974 21.832 19.9221C21.0477 20.8855 20.0582 21.6618 18.9358 22.1942C17.8134 22.7267 16.5863 23.002 15.344 23.0001C10.734 23.0001 7 19.2861 7 14.7101C7 11.2661 9.114 8.31205 12.124 7.06005C12.2739 6.99669 12.4404 6.98368 12.5983 7.02299C12.7563 7.0623 12.8973 7.1518 13 7.27805Z"
                      fill="white"
                    />
                  </g>
                  <defs>
                    <clipPath id="clip0_26_30">
                      <rect
                        width="16"
                        height="16"
                        fill="white"
                        transform="translate(7 7)"
                      />
                    </clipPath>
                  </defs>
                </svg>
              </div>
              {/* <Typography variant="h6" component="div" sx={{ flexGrow: 1 }}>
                        Photos
                    </Typography> */}
            </Toolbar>
          </AppBar>
          <br />
          <br />
          <br />
        </>
      ) : (
        <>
          <AppBar position="fixed" style={styles(theme).appBar}>
            <Toolbar>
              <div className="d-flex align-items-center justify-content-around w-100">
                <div
                  className="me-5"
                  style={{ cursor: "pointer" }}
                  onClick={() => navigate("/")}
                >
                  <svg
                    width="132"
                    height="28"
                    viewBox="0 0 132 28"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M23.7852 13.2069V15.9573C23.7852 16.4685 23.8011 16.9796 23.7726 17.4892C23.6951 18.8942 23.2365 20.119 21.867 20.6833C20.4438 21.2732 19.1218 21.045 17.9341 19.9487C14.1499 16.4572 10.3435 13.0011 6.534 9.53218C6.30154 9.31999 6.05959 9.11584 5.66899 8.76541V20.6688C3.87254 20.6688 2.16782 20.6929 0.466256 20.6302C0.308118 20.6302 0.0329588 20.0805 0.0297961 19.7847C-0.000250086 16.0923 0.00923817 12.3983 0.00923817 8.70433C0.00923817 7.0229 -0.0176452 5.34148 0.0203078 3.66005C0.0772374 1.15078 1.67917 -0.363471 3.93263 0.075371C4.66639 0.216829 5.4128 0.689429 5.98842 1.20061C9.75684 4.57632 13.4778 8.00186 17.2162 11.4113C17.455 11.6283 17.7048 11.8341 18.0923 12.1684V0.404905H63.3355C62.6697 1.27777 62.0878 2.04936 61.4963 2.81613C60.7863 3.73239 60.2312 4.99265 59.3045 5.45882C58.3779 5.92499 57.0527 5.60189 55.903 5.60993C54.728 5.61957 53.5531 5.60993 52.2769 5.60993V20.5756H46.089V5.69512H23.7916C23.7916 6.40242 23.7378 7.09202 23.8264 7.76074C23.8517 7.95846 24.285 8.24298 24.5332 8.24298C26.8673 8.27995 29.2015 8.26388 31.534 8.26388H40.1351C39.9074 8.63199 39.773 8.87472 39.6132 9.09977C38.8225 10.225 37.9781 11.3068 37.2238 12.4546C36.83 13.0526 36.3714 13.2262 35.6867 13.2197C32.1128 13.1876 28.5373 13.2053 24.9634 13.2053L23.7852 13.2069Z"
                      fill="url(#paint0_linear_55_667)"
                    />
                    <path
                      d="M59.992 21C59.6987 21 59.4907 20.808 59.368 20.424L56.408 11.048C56.344 10.8453 56.3733 10.6427 56.496 10.44C56.624 10.2373 56.808 10.136 57.048 10.136C57.176 10.136 57.2987 10.1787 57.416 10.264C57.5333 10.344 57.6187 10.472 57.672 10.648L60.28 18.952H59.928L62.408 10.728C62.4667 10.536 62.5653 10.392 62.704 10.296C62.848 10.2 62.9947 10.152 63.144 10.152C63.304 10.152 63.4587 10.2 63.608 10.296C63.7573 10.392 63.8587 10.536 63.912 10.728L66.392 18.952H66.04L68.648 10.648C68.7067 10.472 68.7893 10.3467 68.896 10.272C69.008 10.192 69.128 10.152 69.256 10.152C69.4907 10.152 69.6773 10.2427 69.816 10.424C69.9547 10.6053 69.9867 10.8133 69.912 11.048L66.952 20.424C66.824 20.808 66.5893 21 66.248 21H66.216C65.8587 21 65.624 20.808 65.512 20.424L62.936 12.088H63.288L60.696 20.424C60.6427 20.616 60.5627 20.76 60.456 20.856C60.3547 20.952 60.2 21 59.992 21ZM70.9958 20.936C70.5691 20.7707 70.4411 20.4773 70.6118 20.056L74.4198 10.68C74.5798 10.328 74.8304 10.152 75.1718 10.152H75.2038C75.5504 10.168 75.7851 10.344 75.9078 10.68L79.7798 20.056C79.9504 20.4773 79.8278 20.7707 79.4118 20.936C78.9904 21.1013 78.6971 20.9787 78.5318 20.568L77.6678 18.472H72.6838L71.8598 20.568C71.6944 20.984 71.4064 21.1067 70.9958 20.936ZM73.2118 17.128H77.1158L75.1238 12.28L73.2118 17.128ZM84.1308 21C83.9068 21 83.7388 20.944 83.6267 20.832C83.5148 20.72 83.4588 20.552 83.4588 20.328V11.512H80.3548C80.1308 11.512 79.9628 11.456 79.8508 11.344C79.7388 11.232 79.6828 11.064 79.6828 10.84C79.6828 10.616 79.7388 10.448 79.8508 10.336C79.9628 10.224 80.1308 10.168 80.3548 10.168H87.9068C88.1308 10.168 88.2988 10.224 88.4108 10.336C88.5228 10.448 88.5788 10.616 88.5788 10.84C88.5788 11.064 88.5228 11.232 88.4108 11.344C88.2988 11.456 88.1308 11.512 87.9068 11.512H84.8028V20.328C84.8028 20.5413 84.7441 20.7067 84.6268 20.824C84.5148 20.9413 84.3494 21 84.1308 21ZM93.2703 21C92.0489 21 91.1449 20.7093 90.5583 20.128C89.9769 19.5413 89.6863 18.6373 89.6863 17.416V13.736C89.6863 12.504 89.9769 11.5973 90.5583 11.016C91.1396 10.4293 92.0383 10.1413 93.2543 10.152H95.1903C96.1929 10.152 96.9583 10.36 97.4863 10.776C98.0143 11.1867 98.3209 11.8373 98.4062 12.728C98.4383 12.952 98.3956 13.1227 98.2783 13.24C98.1609 13.3573 97.9903 13.416 97.7663 13.416C97.3609 13.416 97.1263 13.192 97.0623 12.744C97.0089 12.2533 96.8383 11.9227 96.5503 11.752C96.2676 11.5813 95.8143 11.496 95.1903 11.496H93.2543C92.6889 11.4907 92.2436 11.5547 91.9183 11.688C91.5983 11.8213 91.3689 12.0533 91.2303 12.384C91.0969 12.7093 91.0303 13.16 91.0303 13.736V17.416C91.0303 17.9867 91.0969 18.4347 91.2303 18.76C91.3689 19.0853 91.6009 19.3173 91.9263 19.456C92.2516 19.5893 92.6996 19.656 93.2703 19.656H95.1903C95.8143 19.656 96.2676 19.5707 96.5503 19.4C96.8383 19.224 97.0089 18.8933 97.0623 18.408C97.1263 17.96 97.3609 17.736 97.7663 17.736C97.9903 17.736 98.1609 17.7947 98.2783 17.912C98.3956 18.0293 98.4383 18.2 98.4062 18.424C98.3209 19.32 98.0143 19.9733 97.4863 20.384C96.9583 20.7947 96.1929 21 95.1903 21H93.2703ZM101.883 21C101.707 21 101.55 20.9333 101.411 20.8C101.278 20.6613 101.211 20.504 101.211 20.328V10.824C101.211 10.648 101.278 10.4933 101.411 10.36C101.55 10.2213 101.707 10.152 101.883 10.152C102.059 10.152 102.214 10.2213 102.347 10.36C102.486 10.4933 102.555 10.648 102.555 10.824V14.84H109.083V10.824C109.083 10.648 109.15 10.4933 109.283 10.36C109.416 10.2213 109.574 10.152 109.755 10.152C109.931 10.152 110.086 10.2213 110.219 10.36C110.358 10.4933 110.427 10.648 110.427 10.824V20.328C110.427 20.504 110.358 20.6613 110.219 20.8C110.086 20.9333 109.931 21 109.755 21C109.574 21 109.416 20.9333 109.283 20.8C109.15 20.6613 109.083 20.504 109.083 20.328V16.184H102.555V20.328C102.555 20.504 102.486 20.6613 102.347 20.8C102.214 20.9333 102.059 21 101.883 21ZM114.43 21C113.982 21 113.758 20.776 113.758 20.328V10.824C113.758 10.376 113.982 10.152 114.43 10.152H120.174C120.622 10.152 120.846 10.376 120.846 10.824C120.846 11.272 120.622 11.496 120.174 11.496H115.102V14.856H118.286C118.734 14.856 118.958 15.08 118.958 15.528C118.958 15.976 118.734 16.2 118.286 16.2H115.102V19.656H120.174C120.622 19.656 120.846 19.88 120.846 20.328C120.846 20.776 120.622 21 120.174 21H114.43ZM130.374 21.032C130.198 21.144 130.03 21.1787 129.87 21.136C129.71 21.0933 129.574 20.984 129.462 20.808L126.982 16.68H124.742V20.328C124.742 20.776 124.518 21 124.07 21C123.622 21 123.398 20.776 123.398 20.328V10.824C123.398 10.376 123.622 10.152 124.07 10.152H127.814C128.79 10.152 129.537 10.4133 130.054 10.936C130.577 11.4533 130.838 12.2 130.838 13.176V13.656C130.838 14.504 130.641 15.1813 130.246 15.688C129.852 16.1893 129.281 16.5013 128.534 16.624L130.63 20.12C130.833 20.4933 130.748 20.7973 130.374 21.032ZM124.742 15.336H127.814C128.422 15.336 128.854 15.208 129.11 14.952C129.366 14.696 129.494 14.264 129.494 13.656V13.176C129.494 12.5733 129.366 12.144 129.11 11.888C128.854 11.6267 128.422 11.496 127.814 11.496H124.742V15.336Z"
                      fill="white"
                    />
                    <defs>
                      <linearGradient
                        id="paint0_linear_55_667"
                        x1="-0.000250087"
                        y1="10.4999"
                        x2="60.9381"
                        y2="10.4999"
                        gradientUnits="userSpaceOnUse"
                      >
                        <stop stop-color="#0673DB" />
                        <stop offset="0.9" stop-color="#8212F4" />
                      </linearGradient>
                    </defs>
                  </svg>
                </div>
                <IconButton
                  color="inherit"
                  aria-label="open drawer"
                  onClick={() => setDrawer(true)}
                  edge="start"
                >
                  <MenuIcon />
                </IconButton>
              </div>

              <Drawer
                anchor={"right"}
                open={drawer}
                onClose={() => setDrawer(false)}
              >
                <Box style={{ width: 250 }} role="presentation">
                  <List>
                    <div style={styles(theme).searchBox} className="mx-2">
                      <div className="mx-2">
                        <svg
                          width="15"
                          height="15"
                          viewBox="0 0 15 15"
                          fill="none"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <path
                            d="M14 13.6667L11.0093 10.6707L14 13.6667ZM12.6667 6.66667C12.6667 8.16956 12.0697 9.6109 11.0069 10.6736C9.94424 11.7363 8.5029 12.3333 7.00001 12.3333C5.49712 12.3333 4.05578 11.7363 2.99307 10.6736C1.93037 9.6109 1.33334 8.16956 1.33334 6.66667C1.33334 5.16377 1.93037 3.72243 2.99307 2.65973C4.05578 1.59702 5.49712 1 7.00001 1C8.5029 1 9.94424 1.59702 11.0069 2.65973C12.0697 3.72243 12.6667 5.16377 12.6667 6.66667V6.66667Z"
                            stroke="white"
                            stroke-linecap="round"
                          />
                        </svg>
                      </div>
                      <div>
                        <input
                          className="py-1"
                          type="text"
                          autoComplete={"off"}
                          name="search"
                          value={search}
                          onChange={onSearchNFT}
                          placeholder="Search..."
                          style={styles(theme).seaarchInput}
                        />
                      </div>
                      <div
                        className="mx-2"
                        style={
                          search.length === 0
                            ? { visibility: "hidden" }
                            : { cursor: "pointer" }
                        }
                        onClick={() => setSearch("")}
                      >
                        <svg
                          width="12"
                          height="12"
                          viewBox="0 0 12 12"
                          fill="none"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <path
                            d="M10.2748 1.75062C7.93481 -0.583541 4.0949 -0.583541 1.75496 1.75062C-0.584986 4.08479 -0.584986 7.91521 1.75496 10.2494C4.0949 12.5835 7.87481 12.5835 10.2148 10.2494C12.5547 7.91521 12.6147 4.08479 10.2748 1.75062ZM7.69482 8.51372L6.01486 6.8379L4.3349 8.51372L3.49492 7.67581L5.17488 6L3.49492 4.32419L4.3349 3.48628L6.01486 5.16209L7.69482 3.48628L8.5348 4.32419L6.85484 6L8.5348 7.67581L7.69482 8.51372Z"
                            fill="white"
                          />
                        </svg>
                      </div>
                      <div
                        className="shadow"
                        style={
                          search.length === 0
                            ? {
                                visibility: "hidden",
                                ...styles(theme).NftSearchingBox,
                              }
                            : { ...styles(theme).NftSearchingBox, width: 250 }
                        }
                      >
                        {filteredCollections?.map((item, i) => {
                          return (
                            <div
                              style={{
                                display: "flex",
                                alignItems: "center",
                                borderBottom: `1px solid ${theme.palette.primary.main}`,
                                padding: 10,
                                cursor: "pointer",
                              }}
                              onClick={() => {
                                setSearch("");
                                setDrawer(false);
                                navigate("/collection/" + item.slug);
                              }}
                              className="searchingNftHover shadow"
                            >
                              <p className="m-0">#{i + 1}</p>
                              <img
                                className="mx-3"
                                src={item?.image_url}
                                style={{
                                  width: 35,
                                  height: 35,
                                  borderRadius: 9999,
                                }}
                              />
                              <div
                                className="d-flex"
                                style={{ flexDirection: "column" }}
                              >
                                <h6 className="m-0">
                                  {item?.name?.substring(0, 18)}{" "}
                                  {item?.name?.length > 18 ? "..." : null}
                                </h6>
                                {/* <small>Huxley Robots</small> */}
                              </div>
                            </div>
                          );
                        })}
                      </div>
                    </div>
                    <br />
                    <ListItem
                      button
                      onClick={() => {
                        setDrawer(false);
                        navigate("/events");
                      }}
                    >
                      <ListItemText primary={"Upcoming Drops"} />
                    </ListItem>
                    <ListItem
                      button
                      onClick={() => {
                        setDrawer(false);
                        navigate("/events/submit");
                      }}
                      style={{ background: theme.palette.primary.main }}
                    >
                      <ListItemText
                        style={{ color: "white" }}
                        primary={"List Your Upcoming Drops"}
                      />
                    </ListItem>
                    <ListItem
                      button
                      onClick={() => {
                        setDrawer(false);
                        window.open("https://news.nftwatcher.net");
                      }}
                    >
                      <ListItemText primary={"News"} />
                    </ListItem>
                    <ListItem
                      button
                      onClick={() => {
                        setDrawer(false);
                        navigate("/project/submit");
                      }}
                    >
                      <ListItemText primary={"List Your Project With Rarity"} />
                    </ListItem>
                    <ListItem
                      button
                      onClick={() => {
                        setDrawer(false);
                        navigate("/advertise");
                      }}
                    >
                      <ListItemText primary={"Advertise"} />
                    </ListItem>
                    <ListItem
                      button
                      onClick={() => {
                        setDrawer(false);
                        navigate("/contact-us");
                      }}
                    >
                      <ListItemText primary={"Contact Us"} />
                    </ListItem>

                    <div className="d-flex align-items-center justify-content-center mt-3">
                      <a
                        className=""
                        href={"https://twitter.com/nftwatcher_net"}
                        target="_blank"
                        style={styles(theme).appBarIcon}
                      >
                        <svg
                          width="28"
                          height="28"
                          viewBox="0 0 28 28"
                          fill="none"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <rect width="28" height="28" rx="4" fill="#8212F4" />
                          <path
                            d="M21 10.3022C20.4848 10.523 19.9313 10.6723 19.3503 10.7394C19.9434 10.3957 20.3988 9.85152 20.6132 9.20308C20.0494 9.52655 19.4326 9.75446 18.7893 9.87695C18.2654 9.33728 17.5189 9 16.6928 9C15.1065 9 13.8204 10.2434 13.8204 11.7769C13.8204 11.9946 13.8458 12.2065 13.8948 12.4098C11.5077 12.2939 9.39127 11.1884 7.97459 9.50832C7.7274 9.91846 7.58576 10.3955 7.58576 10.9044C7.58576 11.8678 8.09288 12.7178 8.86353 13.2158C8.40741 13.202 7.96132 13.0829 7.56252 12.8684C7.56235 12.88 7.56235 12.8917 7.56235 12.9033C7.56235 14.2488 8.55241 15.3712 9.86634 15.6263C9.44338 15.7375 8.99972 15.7538 8.56926 15.6739C8.93473 16.7771 9.99551 17.58 11.2523 17.6024C10.2693 18.3472 9.03082 18.7912 7.68518 18.7912C7.4533 18.7912 7.22471 18.778 7 18.7524C8.2711 19.5403 9.78086 20 11.4029 20C16.6861 20 19.5751 15.7685 19.5751 12.0989C19.5751 11.9785 19.5723 11.8587 19.5668 11.7397C20.1291 11.3467 20.6144 10.8599 21 10.3022Z"
                            fill="white"
                          />
                        </svg>
                      </a>
                      <a
                        className="ms-3"
                        href={"https://medium.com/@NFTWatcher.net"}
                        target="_blank"
                        style={styles(theme).appBarIcon}
                      >
                        <svg
                          width="28"
                          height="28"
                          viewBox="0 0 28 28"
                          fill="none"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <rect width="28" height="28" rx="4" fill="#252836" />
                          <path
                            d="M15.025 14.5C15.025 16.985 13.005 19 10.512 19C9.92026 19.0008 9.33417 18.885 8.78717 18.6593C8.24018 18.4336 7.743 18.1023 7.32402 17.6845C6.90504 17.2666 6.57247 16.7703 6.34529 16.2239C6.11812 15.6775 6.00079 15.0917 6 14.5C6 12.014 8.02 10 10.512 10C11.1038 9.99909 11.69 10.1148 12.2371 10.3404C12.7842 10.5661 13.2815 10.8973 13.7006 11.3152C14.1197 11.7331 14.4524 12.2294 14.6796 12.7759C14.9068 13.3223 15.0242 13.9082 15.025 14.5ZM19.975 14.5C19.975 16.84 18.965 18.736 17.719 18.736C16.473 18.736 15.463 16.839 15.463 14.5C15.463 12.16 16.473 10.264 17.719 10.264C18.965 10.264 19.975 12.161 19.975 14.5ZM22 14.5C22 16.596 21.645 18.295 21.206 18.295C20.768 18.295 20.413 16.595 20.413 14.5C20.413 12.404 20.768 10.705 21.207 10.705C21.645 10.705 22 12.404 22 14.5Z"
                            fill="white"
                          />
                        </svg>
                      </a>
                      <a
                        className="ms-3"
                        href={"https://www.instagram.com/nftwatcher_net"}
                        target="_blank"
                        style={styles(theme).appBarIcon}
                      >
                        <svg
                          width="28"
                          height="28"
                          viewBox="0 0 28 28"
                          fill="none"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <rect width="28" height="28" rx="4" fill="#252836" />
                          <path
                            fill-rule="evenodd"
                            clip-rule="evenodd"
                            d="M11.2 8H16.8C19.1196 8 21 9.8804 21 12.2V17.8C21 20.1196 19.1196 22 16.8 22H11.2C8.8804 22 7 20.1196 7 17.8V12.2C7 9.8804 8.8804 8 11.2 8ZM18.2 10.1C18.55 10.1 18.9 10.45 18.9 10.8C18.9 11.15 18.55 11.5 18.2 11.5C17.85 11.5 17.5 11.15 17.5 10.8C17.5 10.45 17.85 10.1 18.2 10.1ZM17.5 15C17.5 13.0697 15.9303 11.5 14 11.5C12.0697 11.5 10.5 13.0697 10.5 15C10.5 16.9303 12.0697 18.5 14 18.5C15.9303 18.5 17.5 16.9303 17.5 15ZM14 12.9C12.8402 12.9 11.9 13.8402 11.9 15C11.9 16.1598 12.8402 17.1 14 17.1C15.1598 17.1 16.1 16.1598 16.1 15C16.1 13.8402 15.1598 12.9 14 12.9Z"
                            fill="white"
                          />
                        </svg>
                      </a>
                      <div
                        className="ms-3 cursor-pointer"
                        role="button"
                        onClick={toogleTheme}
                      >
                        <svg
                          width="30"
                          height="30"
                          viewBox="0 0 30 30"
                          fill="none"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <circle cx="15" cy="15" r="15" fill="#8212F4" />
                          <g clip-path="url(#clip0_26_30)">
                            <path
                              d="M13 7.27805C13.0976 7.39667 13.1574 7.54183 13.1717 7.69478C13.1859 7.84773 13.154 8.00144 13.08 8.13605C12.5019 9.19753 12.1999 10.3873 12.202 11.5961C12.202 15.6171 15.48 18.8731 19.52 18.8731C20.047 18.8731 20.56 18.8181 21.053 18.7131C21.2041 18.6803 21.3615 18.6928 21.5056 18.749C21.6497 18.8052 21.774 18.9026 21.863 19.0291C21.957 19.1605 22.0049 19.3193 21.9993 19.4808C21.9937 19.6423 21.9349 19.7974 21.832 19.9221C21.0477 20.8855 20.0582 21.6618 18.9358 22.1942C17.8134 22.7267 16.5863 23.002 15.344 23.0001C10.734 23.0001 7 19.2861 7 14.7101C7 11.2661 9.114 8.31205 12.124 7.06005C12.2739 6.99669 12.4404 6.98368 12.5983 7.02299C12.7563 7.0623 12.8973 7.1518 13 7.27805Z"
                              fill="white"
                            />
                          </g>
                          <defs>
                            <clipPath id="clip0_26_30">
                              <rect
                                width="16"
                                height="16"
                                fill="white"
                                transform="translate(7 7)"
                              />
                            </clipPath>
                          </defs>
                        </svg>
                      </div>
                    </div>
                  </List>
                </Box>
              </Drawer>
            </Toolbar>
          </AppBar>
          <br />
          <br />
        </>
      )}
    </Box>
  );
}

const styles = (theme) => {
  return {
    appBar: {
      background: theme.palette.cardColor.main,
      boxShadow: "none",
    },
    appBarIcon: {
      cursor: "pointer",
    },
    searchBox: {
      background: "#2D303E",
      borderRadius: 9999,
      display: "flex",
      alignItems: "center",
      justifyContent: "center",
    },
    seaarchInput: {
      background: "transparent",
      border: "none",
      outline: "none",
      color: "white",
    },
    headerButton: {
      textTransform: "capitalize",
      fontWeight: "bold",
    },
    NftSearchingBox: {
      position: "absolute",
      width: 300,
      height: 500,
      backgroundColor: theme.palette.cardColor.main,
      top: 65,
      zIndex: 9999,
      borderRadius: 10,
      overflow: "hidden",
    },
  };
};
